<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="win.likie.point.mapper.ExchangeRecordMapper">
  <resultMap id="BaseResultMap" type="win.likie.point.entity.ExchangeRecord">
    <id column="exchange_records" jdbcType="INTEGER" property="exchangeRecords" />
    <result column="client_mobile" jdbcType="VARCHAR" property="clientMobile" />
    <result column="exchange_date" jdbcType="TIMESTAMP" property="exchangeDate" />
    <result column="exchange_points" jdbcType="VARCHAR" property="exchangePoints" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Base_Column_List">
    exchange_records, client_mobile, exchange_date, exchange_points, remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exchange_record
    where exchange_records = #{exchangeRecords,jdbcType=INTEGER}
  </select>
  <select id="selectAllExchangeRecord"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from exchange_record
    <if test="clientMobile != null ">
       where  client_mobile LIKE #{clientMobile,jdbcType=VARCHAR}
    </if>

  </select>

  <select id="selectByClientMobile"  resultMap="BaseResultMap">
    select
    *
    from exchange_record
    where client_mobile = #{clientMobile,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exchange_record
    where exchange_records = #{exchangeRecords,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="win.likie.point.entity.ExchangeRecord">
    insert into exchange_record (exchange_records, client_mobile, exchange_date, 
      exchange_points, remarks)
    values (#{exchangeRecords,jdbcType=INTEGER}, #{clientMobile,jdbcType=VARCHAR}, #{exchangeDate,jdbcType=TIMESTAMP}, 
      #{exchangePoints,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="win.likie.point.entity.ExchangeRecord">
    insert into exchange_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="exchangeRecords != null">
        exchange_records,
      </if>
      <if test="clientMobile != null">
        client_mobile,
      </if>
      <if test="exchangeDate != null">
        exchange_date,
      </if>
      <if test="exchangePoints != null">
        exchange_points,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="exchangeRecords != null">
        #{exchangeRecords,jdbcType=INTEGER},
      </if>
      <if test="clientMobile != null">
        #{clientMobile,jdbcType=VARCHAR},
      </if>
      <if test="exchangeDate != null">
        #{exchangeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="exchangePoints != null">
        #{exchangePoints,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="win.likie.point.entity.ExchangeRecord">
    update exchange_record
    <set>
      <if test="clientMobile != null">
        client_mobile = #{clientMobile,jdbcType=VARCHAR},
      </if>
      <if test="exchangeDate != null">
        exchange_date = #{exchangeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="exchangePoints != null">
        exchange_points = #{exchangePoints,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where exchange_records = #{exchangeRecords,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="win.likie.point.entity.ExchangeRecord">
    update exchange_record
    set client_mobile = #{clientMobile,jdbcType=VARCHAR},
      exchange_date = #{exchangeDate,jdbcType=TIMESTAMP},
      exchange_points = #{exchangePoints,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where exchange_records = #{exchangeRecords,jdbcType=INTEGER}
  </update>
</mapper>