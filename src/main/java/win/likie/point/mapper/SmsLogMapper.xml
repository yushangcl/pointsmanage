<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="win.likie.point.mapper.SmsLogMapper">
  <resultMap id="BaseResultMap" type="win.likie.point.entity.SmsLog">
    <id column="sms_log_id" jdbcType="INTEGER" property="smsLogId" />
    <result column="sms_phone" jdbcType="VARCHAR" property="smsPhone" />
    <result column="sms_status" jdbcType="INTEGER" property="smsStatus" />
    <result column="sms_send_time" jdbcType="DATE" property="smsSendTime" />
  </resultMap>
  <sql id="Base_Column_List">
    sms_log_id, sms_phone, sms_status, sms_send_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sms_log
    where sms_log_id = #{smsLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sms_log
    where sms_log_id = #{smsLogId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="win.likie.point.entity.SmsLog">
    insert into sms_log (sms_log_id, sms_phone, sms_status, 
      sms_send_time)
    values (#{smsLogId,jdbcType=INTEGER}, #{smsPhone,jdbcType=VARCHAR}, #{smsStatus,jdbcType=INTEGER}, 
      #{smsSendTime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="win.likie.point.entity.SmsLog">
    insert into sms_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="smsLogId != null">
        sms_log_id,
      </if>
      <if test="smsPhone != null">
        sms_phone,
      </if>
      <if test="smsStatus != null">
        sms_status,
      </if>
      <if test="smsSendTime != null">
        sms_send_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="smsLogId != null">
        #{smsLogId,jdbcType=INTEGER},
      </if>
      <if test="smsPhone != null">
        #{smsPhone,jdbcType=VARCHAR},
      </if>
      <if test="smsStatus != null">
        #{smsStatus,jdbcType=INTEGER},
      </if>
      <if test="smsSendTime != null">
        #{smsSendTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="win.likie.point.entity.SmsLog">
    update sms_log
    <set>
      <if test="smsPhone != null">
        sms_phone = #{smsPhone,jdbcType=VARCHAR},
      </if>
      <if test="smsStatus != null">
        sms_status = #{smsStatus,jdbcType=INTEGER},
      </if>
      <if test="smsSendTime != null">
        sms_send_time = #{smsSendTime,jdbcType=DATE},
      </if>
    </set>
    where sms_log_id = #{smsLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="win.likie.point.entity.SmsLog">
    update sms_log
    set sms_phone = #{smsPhone,jdbcType=VARCHAR},
      sms_status = #{smsStatus,jdbcType=INTEGER},
      sms_send_time = #{smsSendTime,jdbcType=DATE}
    where sms_log_id = #{smsLogId,jdbcType=INTEGER}
  </update>
  <select id="getsByMap" parameterType="java.util.HashMap" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from exchange_record
    where 1=1
    <foreach collection="map.keys" item="_itemKey" open=""  separator="">
      <if test="null != map[_itemKey]">
        and ${_itemKey} = #{map[${_itemKey}]}
      </if>
    </foreach>
  </select>
  <select id="getCountByMap" parameterType="java.util.HashMap" resultType="java.lang.Integer" >
    select count(1)
    from exchange_record
    where 1=1
    <foreach collection="map.keys" item="_itemKey" open=""  separator="">
      <if test="null != map[_itemKey]">
        and ${_itemKey} = #{map[${_itemKey}]}
      </if>
    </foreach>
  </select>
</mapper>